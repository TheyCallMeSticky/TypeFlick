#!/bin/bash

# Script de d√©marrage pour l'ensemble du projet TypeFlick + Artists Collector

set -e

echo "üöÄ D√©marrage de l'environnement complet TypeFlick + Artists Collector"
echo "=" * 70

# V√©rifier que Docker est install√©
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©. Veuillez l'installer d'abord."
    exit 1
fi

# V√©rifier que le fichier .env existe
if [ ! -f .env ]; then
    echo "üìù Cr√©ation du fichier .env √† partir de .env.example"
    cp .env.example .env
    echo "‚ö†Ô∏è  IMPORTANT: Configurez vos cl√©s API dans le fichier .env avant de continuer"
    echo "   - Cl√©s Stripe (STRIPE_SECRET_KEY, STRIPE_WEBHOOK_SECRET)"
    echo "   - Cl√©s Spotify (SPOTIFY_CLIENT_ID, SPOTIFY_CLIENT_SECRET)"
    echo "   - Cl√©s YouTube (YOUTUBE_API_KEY_1 √† YOUTUBE_API_KEY_12)"
    echo ""
    read -p "Appuyez sur Entr√©e une fois la configuration termin√©e..."
fi

# Cr√©er les r√©pertoires n√©cessaires
echo "üìÅ Cr√©ation des r√©pertoires n√©cessaires..."
mkdir -p artists-collector/backups
mkdir -p artists-collector/logs

# D√©marrer tous les services
echo "üê≥ D√©marrage de tous les conteneurs..."
docker-compose up -d

echo ""
echo "üìã Services d√©marr√©s avec succ√®s!"
echo ""
echo "üåê Services disponibles:"
echo "  ‚Ä¢ TypeFlick Site:        http://localhost:3000"
echo "  ‚Ä¢ TypeFlick API:         http://localhost:8000"
echo "  ‚Ä¢ Artists Collector API: http://localhost:8001"
echo "  ‚Ä¢ Artists Dashboard:     http://localhost:3002"
echo "  ‚Ä¢ Metadata API:          http://localhost:3001"
echo ""
echo "üóÑÔ∏è  Bases de donn√©es:"
echo "  ‚Ä¢ PostgreSQL TypeFlick:  localhost:54322"
echo "  ‚Ä¢ PostgreSQL Artists:    localhost:54323"
echo "  ‚Ä¢ Redis:                  localhost:6379"
echo ""
echo "üìä Documentation API:"
echo "  ‚Ä¢ TypeFlick API Docs:     http://localhost:8000/docs"
echo "  ‚Ä¢ Artists API Docs:       http://localhost:8001/docs"
echo ""
echo "üìù Commandes utiles:"
echo "  ‚Ä¢ Voir les logs:          docker-compose logs -f"
echo "  ‚Ä¢ Arr√™ter les services:   docker-compose down"
echo "  ‚Ä¢ Red√©marrer un service:  docker-compose restart <service-name>"
echo ""

# Optionnel: afficher les logs en temps r√©el
read -p "Voulez-vous voir les logs en temps r√©el? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    docker-compose logs -f
fi
